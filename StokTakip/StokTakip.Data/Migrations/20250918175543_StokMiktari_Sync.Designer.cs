// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StokTakip.StokTakip.Data;

#nullable disable

namespace StokTakip.Data.Migrations
{
    [DbContext(typeof(StokTakipContext))]
    [Migration("20250918175543_StokMiktari_Sync")]
    partial class StokMiktari_Sync
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StokTakip.Models.Gruplar", b =>
                {
                    b.Property<int>("GrupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrupId"));

                    b.Property<string>("GrupAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GrupId");

                    b.ToTable("Gruplar", (string)null);
                });

            modelBuilder.Entity("StokTakip.Models.Personel", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelId"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Eposta")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gorev")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("KayitTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("Rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("YetkiliSifre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PersonelId");

                    b.ToTable("Personel", (string)null);
                });

            modelBuilder.Entity("StokTakip.Models.Proje", b =>
                {
                    b.Property<int>("ProjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjeId"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("BaslangicTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("ProjeAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProjeId");

                    b.HasIndex("PersonelId");

                    b.ToTable("Proje", (string)null);
                });

            modelBuilder.Entity("StokTakip.Models.ProjedeKullanilanUrunler", b =>
                {
                    b.Property<int>("KullanilanUrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullanilanUrunId"));

                    b.Property<decimal>("Maliyet")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("ProjeId")
                        .HasColumnType("int");

                    b.Property<int>("StokKartiId")
                        .HasColumnType("int");

                    b.HasKey("KullanilanUrunId");

                    b.HasIndex("ProjeId");

                    b.HasIndex("StokKartiId");

                    b.ToTable("ProjedeKullanilanUrunler", (string)null);
                });

            modelBuilder.Entity("StokTakip.Models.Rapor", b =>
                {
                    b.Property<int>("RaporId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime");

                    b.Property<decimal>("GelenTutar")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("HarcananTutar")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("KullanilanMaliyet")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("ProjeAciklama")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ProjeId")
                        .HasColumnType("int");

                    b.HasKey("RaporId");

                    b.ToTable("Rapor", (string)null);
                });

            modelBuilder.Entity("StokTakip.Models.SatinAlma", b =>
                {
                    b.Property<int>("SiparisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisId"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BirimFiyat")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("CariAdi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GelenMiktar")
                        .HasColumnType("int");

                    b.Property<decimal?>("Kur")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<string>("ParaBirimi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("PersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SiparisTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("StokKartiId")
                        .HasColumnType("int");

                    b.HasKey("SiparisId")
                        .HasName("PK__SatinAlm__C3F03BFDE33C702A");

                    b.HasIndex("PersonelId");

                    b.HasIndex("StokKartiId");

                    b.ToTable("SatinAlma", (string)null);
                });

            modelBuilder.Entity("StokTakip.Models.StokDurumu", b =>
                {
                    b.Property<int>("DurumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DurumId"));

                    b.Property<string>("BlokeMiktar")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("DepoAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("KaliteMiktar")
                        .HasColumnType("int");

                    b.Property<int>("SerbestMiktar")
                        .HasColumnType("int");

                    b.Property<int>("StokKartiId")
                        .HasColumnType("int");

                    b.HasKey("DurumId");

                    b.HasIndex("StokKartiId");

                    b.ToTable("StokDurumu", (string)null);
                });

            modelBuilder.Entity("StokTakip.Models.StokHareketi", b =>
                {
                    b.Property<int>("HareketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HareketId"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<int>("ProjeId")
                        .HasColumnType("int");

                    b.Property<int>("StokKartiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("HareketId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("StokKartiId");

                    b.ToTable("StokHareketi", (string)null);
                });

            modelBuilder.Entity("StokTakip.Models.StokKarti", b =>
                {
                    b.Property<int>("StokKartiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StokKartiId"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DepoAdresi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FirmaAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirmaKodu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GrupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("KayitTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("MaxStok")
                        .HasColumnType("int");

                    b.Property<int>("MinStok")
                        .HasColumnType("int");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<string>("ResimYolu")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("StokBirimi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StokKodu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StokMiktari")
                        .HasColumnType("int");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StokKartiId")
                        .HasName("PK_StokKartı");

                    b.HasIndex("GrupId");

                    b.ToTable("StokKarti", (string)null);
                });

            modelBuilder.Entity("StokTakip.Models.Proje", b =>
                {
                    b.HasOne("StokTakip.Models.Personel", "Personel")
                        .WithMany("Projes")
                        .HasForeignKey("PersonelId")
                        .IsRequired()
                        .HasConstraintName("FK_Proje_Personel");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("StokTakip.Models.ProjedeKullanilanUrunler", b =>
                {
                    b.HasOne("StokTakip.Models.Proje", "Proje")
                        .WithMany("ProjedeKullanilanUrunlers")
                        .HasForeignKey("ProjeId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjedeKullanilanUrunler_Proje");

                    b.HasOne("StokTakip.Models.StokKarti", "StokKarti")
                        .WithMany("ProjedeKullanilanUrunlers")
                        .HasForeignKey("StokKartiId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjedeKullanilanUrunler_StokKarti");

                    b.Navigation("Proje");

                    b.Navigation("StokKarti");
                });

            modelBuilder.Entity("StokTakip.Models.Rapor", b =>
                {
                    b.HasOne("StokTakip.Models.Proje", "RaporNavigation")
                        .WithOne("Rapor")
                        .HasForeignKey("StokTakip.Models.Rapor", "RaporId")
                        .IsRequired()
                        .HasConstraintName("FK_Rapor_Proje");

                    b.Navigation("RaporNavigation");
                });

            modelBuilder.Entity("StokTakip.Models.SatinAlma", b =>
                {
                    b.HasOne("StokTakip.Models.Personel", "Personel")
                        .WithMany("SatinAlmas")
                        .HasForeignKey("PersonelId")
                        .HasConstraintName("FK_SatinAlma_Personel");

                    b.HasOne("StokTakip.Models.StokKarti", "StokKarti")
                        .WithMany("SatinAlmas")
                        .HasForeignKey("StokKartiId")
                        .IsRequired()
                        .HasConstraintName("FK_SatinAlma_StokKarti");

                    b.Navigation("Personel");

                    b.Navigation("StokKarti");
                });

            modelBuilder.Entity("StokTakip.Models.StokDurumu", b =>
                {
                    b.HasOne("StokTakip.Models.StokKarti", "StokKarti")
                        .WithMany("StokDurumus")
                        .HasForeignKey("StokKartiId")
                        .IsRequired()
                        .HasConstraintName("FK_StokDurumu_StokKarti");

                    b.Navigation("StokKarti");
                });

            modelBuilder.Entity("StokTakip.Models.StokHareketi", b =>
                {
                    b.HasOne("StokTakip.Models.Personel", "Personel")
                        .WithMany("StokHareketis")
                        .HasForeignKey("PersonelId")
                        .IsRequired()
                        .HasConstraintName("FK_StokHareketi_Personel");

                    b.HasOne("StokTakip.Models.StokKarti", "StokKarti")
                        .WithMany("StokHareketis")
                        .HasForeignKey("StokKartiId")
                        .IsRequired()
                        .HasConstraintName("FK_StokHareketi_StokKarti");

                    b.Navigation("Personel");

                    b.Navigation("StokKarti");
                });

            modelBuilder.Entity("StokTakip.Models.StokKarti", b =>
                {
                    b.HasOne("StokTakip.Models.Gruplar", "Grup")
                        .WithMany("StokKartis")
                        .HasForeignKey("GrupId")
                        .IsRequired()
                        .HasConstraintName("FK_StokKarti_Gruplar");

                    b.Navigation("Grup");
                });

            modelBuilder.Entity("StokTakip.Models.Gruplar", b =>
                {
                    b.Navigation("StokKartis");
                });

            modelBuilder.Entity("StokTakip.Models.Personel", b =>
                {
                    b.Navigation("Projes");

                    b.Navigation("SatinAlmas");

                    b.Navigation("StokHareketis");
                });

            modelBuilder.Entity("StokTakip.Models.Proje", b =>
                {
                    b.Navigation("ProjedeKullanilanUrunlers");

                    b.Navigation("Rapor");
                });

            modelBuilder.Entity("StokTakip.Models.StokKarti", b =>
                {
                    b.Navigation("ProjedeKullanilanUrunlers");

                    b.Navigation("SatinAlmas");

                    b.Navigation("StokDurumus");

                    b.Navigation("StokHareketis");
                });
#pragma warning restore 612, 618
        }
    }
}
